{"ast":null,"code":"import { forkJoin, of } from 'rxjs';\nimport { map, tap, delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction EsempioCombineComponent_div_0_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cliente_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cliente_r6.name || cliente_r6, \" \");\n  }\n}\nfunction EsempioCombineComponent_div_0_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cliente_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cliente_r7.name || cliente_r7, \" \");\n  }\n}\nfunction EsempioCombineComponent_div_0_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cliente_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cliente_r8.name || cliente_r8, \" \");\n  }\n}\nfunction EsempioCombineComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"h3\");\n    i0.ɵɵtext(3, \"Clienti:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\");\n    i0.ɵɵtemplate(5, EsempioCombineComponent_div_0_li_5_Template, 2, 1, \"li\", 2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\")(7, \"h3\");\n    i0.ɵɵtext(8, \"Riveditori:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ul\");\n    i0.ɵɵtemplate(10, EsempioCombineComponent_div_0_li_10_Template, 2, 1, \"li\", 2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"h3\");\n    i0.ɵɵtext(13, \"Marche:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ul\");\n    i0.ɵɵtemplate(15, EsempioCombineComponent_div_0_li_15_Template, 2, 1, \"li\", 2);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.gruppi[0]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.gruppi[1]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.gruppi[2]);\n  }\n}\nfunction EsempioCombineComponent_ng_template_2_Template(rf, ctx) {}\nexport class EsempioCombineComponent {\n  constructor() {\n    this.nomi1 = [{\n      name: 'Danilo'\n    }, {\n      name: 'Carlo'\n    }, {\n      name: 'Mario'\n    }];\n    this.nomi2 = [{\n      name: 'Alessia'\n    }, {\n      name: 'Carla'\n    }];\n    this.primoGruppo$ = of(this.nomi1).pipe(delay(0), tap(valori => console.log('emesso il primo gruppo: ', valori)));\n    this.secondoGruppo$ = of(this.nomi2).pipe(delay(4000), tap(valori => console.log('emesso il secondo gruppo: ', valori)));\n    this.terzoGruppo$ = of(['Pino', 'Marco']).pipe(delay(1500), tap(valori => console.log('emesso il terzo gruppo: ', valori)));\n    // this.gruppiCombinati$ = combineLatest(this.primoGruppo$, this.secondoGruppo$, this.terzoGruppo$).pipe(\n    //   map(([primaChiamata, secondaChiamata, terzaChiamata])=>{\n    //     console.log('prima chiamata: ' + JSON.stringify(primaChiamata));\n    //     console.log('seconda chiamata: ' + JSON.stringify(secondaChiamata));\n    //     console.log('terza chiamata: ' + JSON.stringify(terzaChiamata));\n    //     return [].concat(primaChiamata).concat(secondaChiamata).concat(terzaChiamata);\n    //   }),\n    //   tap((val) => console.log('valori uniti: ', val))\n    // )\n  }\n\n  ngOnInit() {\n    this.gruppiCombinati$ = forkJoin(this.primoGruppo$, this.secondoGruppo$, this.terzoGruppo$).pipe(map(res => {\n      return this.gruppi = res;\n    }));\n  }\n}\nEsempioCombineComponent.ɵfac = function EsempioCombineComponent_Factory(t) {\n  return new (t || EsempioCombineComponent)();\n};\nEsempioCombineComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EsempioCombineComponent,\n  selectors: [[\"app-esempio-combine\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"Loading\", \"\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function EsempioCombineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, EsempioCombineComponent_div_0_Template, 16, 3, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, EsempioCombineComponent_ng_template_2_Template, 0, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.gruppiCombinati$))(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAoCA,QAAQ,EAAEC,EAAE,QAAQ,MAAM;AAC9D,SAASC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,gBAAgB;;;;;ICEpCC,0BAAsC;IAClCA,YACJ;IAAAA,iBAAK;;;;IADDA,eACJ;IADIA,8DACJ;;;;;IAOAA,0BAAsC;IAClCA,YACJ;IAAAA,iBAAK;;;;IADDA,eACJ;IADIA,8DACJ;;;;;IAOAA,0BAAsC;IAClCA,YACJ;IAAAA,iBAAK;;;;IADDA,eACJ;IADIA,8DACJ;;;;;IAxBZA,2BAAoD;IAExCA,wBAAQ;IAAAA,iBAAK;IACjBA,0BAAI;IACAA,4EAEK;IACTA,iBAAK;IAGTA,2BAAK;IACGA,2BAAW;IAAAA,iBAAK;IACpBA,0BAAI;IACAA,8EAEK;IACTA,iBAAK;IAGTA,4BAAK;IACGA,wBAAO;IAAAA,iBAAK;IAChBA,2BAAI;IACAA,8EAEK;IACTA,iBAAK;;;;IArBuBA,eAAY;IAAZA,0CAAY;IASZA,eAAY;IAAZA,0CAAY;IASZA,eAAY;IAAZA,0CAAY;;;;ADbhD,OAAM,MAAOC,uBAAuB;EAclCC;IAZA,UAAK,GAAG,CAAC;MAACC,IAAI,EAAE;IAAQ,CAAC,EAAE;MAACA,IAAI,EAAE;IAAO,CAAC,EAAE;MAACA,IAAI,EAAE;IAAO,CAAC,CAAC;IAE5D,UAAK,GAAG,CAAC;MAACA,IAAI,EAAE;IAAS,CAAC,EAAE;MAACA,IAAI,EAAE;IAAO,CAAC,CAAC;IAW1C,IAAI,CAACC,YAAY,GAAGR,EAAE,CAAC,IAAI,CAACS,KAAK,CAAC,CAACC,IAAI,CACrCP,KAAK,CAAC,CAAC,CAAC,EACRD,GAAG,CAAES,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,MAAM,CAAC,CAAC,CACjE;IAED,IAAI,CAACG,cAAc,GAAGd,EAAE,CAAC,IAAI,CAACe,KAAK,CAAC,CAACL,IAAI,CACvCP,KAAK,CAAC,IAAI,CAAC,EACXD,GAAG,CAAES,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC,CAAC,CACnE;IAED,IAAI,CAACK,YAAY,GAAGhB,EAAE,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAACU,IAAI,CAC5CP,KAAK,CAAC,IAAI,CAAC,EACXD,GAAG,CAAES,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,MAAM,CAAC,CAAC,CACjE;IAED;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;EAGF;;EAEAM,QAAQ;IACN,IAAI,CAACC,gBAAgB,GAAGnB,QAAQ,CAAC,IAAI,CAACS,YAAY,EAAE,IAAI,CAACM,cAAc,EAAE,IAAI,CAACE,YAAY,CAAC,CAACN,IAAI,CAC9FT,GAAG,CAAEkB,GAAG,IAAI;MACV,OAAO,IAAI,CAACC,MAAM,GAAGD,GAAG;IAC1B,CAAC,CAAC,CACH;EACH;;AAlDWd,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTpCrB,yEA6BM;;MAENA,yHAGc;;;;MAlCRA,iEAAgC","names":["forkJoin","of","map","tap","delay","i0","EsempioCombineComponent","constructor","name","primoGruppo$","nomi1","pipe","valori","console","log","secondoGruppo$","nomi2","terzoGruppo$","ngOnInit","gruppiCombinati$","res","gruppi","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/cibando/client/src/app/components/esempio-combine/esempio-combine.component.ts","/Users/giulia/Documents/Progetti/cibando/client/src/app/components/esempio-combine/esempio-combine.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, forkJoin, of } from 'rxjs';\nimport { map, tap, delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-esempio-combine',\n  templateUrl: './esempio-combine.component.html',\n  styleUrls: ['./esempio-combine.component.scss']\n})\nexport class EsempioCombineComponent implements OnInit{\n\n  nomi1 = [{name: 'Danilo'}, {name: 'Carlo'}, {name: 'Mario'}];\n\n  nomi2 = [{name: 'Alessia'}, {name: 'Carla'}];\n\n  private primoGruppo$: Observable<any[]>;\n  private secondoGruppo$: Observable<any[]>;\n  private terzoGruppo$: Observable<string[]>;\n\n  gruppiCombinati$: Observable<any[]>;\n\n  gruppi: any[];\n\n  constructor(){\n    this.primoGruppo$ = of(this.nomi1).pipe(\n      delay(0),\n      tap((valori) => console.log('emesso il primo gruppo: ', valori))\n    );\n\n    this.secondoGruppo$ = of(this.nomi2).pipe(\n      delay(4000),\n      tap((valori) => console.log('emesso il secondo gruppo: ', valori))\n    );\n\n    this.terzoGruppo$ = of(['Pino', 'Marco']).pipe(\n      delay(1500),\n      tap((valori) => console.log('emesso il terzo gruppo: ', valori))\n    );\n\n    // this.gruppiCombinati$ = combineLatest(this.primoGruppo$, this.secondoGruppo$, this.terzoGruppo$).pipe(\n    //   map(([primaChiamata, secondaChiamata, terzaChiamata])=>{\n    //     console.log('prima chiamata: ' + JSON.stringify(primaChiamata));\n    //     console.log('seconda chiamata: ' + JSON.stringify(secondaChiamata));\n    //     console.log('terza chiamata: ' + JSON.stringify(terzaChiamata));\n\n    //     return [].concat(primaChiamata).concat(secondaChiamata).concat(terzaChiamata);\n    //   }),\n    //   tap((val) => console.log('valori uniti: ', val))\n    // )\n\n      \n  }\n\n  ngOnInit(): void {\n    this.gruppiCombinati$ = forkJoin(this.primoGruppo$, this.secondoGruppo$, this.terzoGruppo$).pipe(\n      map((res) => {\n        return this.gruppi = res;\n      })\n    );\n  }\n\n}\n","<div *ngIf=\"gruppiCombinati$ | async; else Loading\">\n    <div>\n        <h3>Clienti:</h3>\n        <ul>\n            <li *ngFor=\"let cliente of gruppi[0]\">\n                {{cliente.name || cliente}}\n            </li>\n        </ul>\n    </div>\n    \n    <div>\n        <h3>Riveditori:</h3>\n        <ul>\n            <li *ngFor=\"let cliente of gruppi[1]\">\n                {{cliente.name || cliente}}\n            </li>\n        </ul>\n    </div>\n    \n    <div>\n        <h3>Marche:</h3>\n        <ul>\n            <li *ngFor=\"let cliente of gruppi[2]\">\n                {{cliente.name || cliente}}\n            </li>\n        </ul>\n    </div>\n    \n\n</div>\n\n<ng-template #Loading>\n\n\n</ng-template>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}