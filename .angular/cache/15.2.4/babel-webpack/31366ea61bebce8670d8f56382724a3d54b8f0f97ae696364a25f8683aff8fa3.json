{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RecipeService {\n  constructor(http) {\n    this.http = http;\n    this.apiBaseUrl = 'api/recipes';\n    this.search = new ReplaySubject();\n  }\n  // getRecipes(): Observable<Recipe[]> {\n  //   //return of (RECIPES);\n  //   return this.http.get<Recipe[]>(`${this.apiBaseUrl}/`);\n  // }\n  getRecipes() {\n    //return of (RECIPES);\n    return this.http.get(`${this.apiBaseUrl}/`);\n  }\n  getRecipe(id) {\n    // const recipe = RECIPES.find(ricetta => ricetta._id == id);\n    // return of (recipe);\n    return this.http.get(`${this.apiBaseUrl}/${id}`);\n  }\n  postRecipe(res) {\n    return this.http.post(`${this.apiBaseUrl}/`, res);\n  }\n}\nRecipeService.ɵfac = function RecipeService_Factory(t) {\n  return new (t || RecipeService)(i0.ɵɵinject(i1.HttpClient));\n};\nRecipeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RecipeService,\n  factory: RecipeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,aAAa,QAAY,MAAM;;;AAMpD,OAAM,MAAOC,aAAa;EAMxBC,YAAqBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJzB,eAAU,GAAG,aAAa;IAE1B,WAAM,GAAG,IAAIH,aAAa;EAEe;EAEzC;EACA;EACA;EAEA;EAEAI,UAAU;IACR;IACA,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,UAAU,GAAG,CAAC;EAEvD;EAGAC,SAAS,CAACC,EAAU;IAClB;IACA;IACA,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,UAAU,IAAIE,EAAE,EAAE,CAAC;EAE1D;EAGAC,UAAU,CAACC,GAAQ;IACjB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACL,UAAU,GAAG,EAAEI,GAAG,CAAC;EACxD;;AA/BWT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAW,SAAbX,aAAa;EAAAY,YAFZ;AAAM","names":["ReplaySubject","RecipeService","constructor","http","getRecipes","get","apiBaseUrl","getRecipe","id","postRecipe","res","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/cibando/client/src/app/services/recipe.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Recipe } from '../models/recipe.model';\nimport { RECIPES } from '../mocks/recipes.mock';\nimport { Observable, ReplaySubject, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n\n  apiBaseUrl = 'api/recipes';\n\n  search = new ReplaySubject;\n\n  constructor( private http: HttpClient) { }\n\n  // getRecipes(): Observable<Recipe[]> {\n  //   //return of (RECIPES);\n  //   return this.http.get<Recipe[]>(`${this.apiBaseUrl}/`);\n\n  // }\n\n  getRecipes() {\n    //return of (RECIPES);\n    return this.http.get<Recipe[]>(`${this.apiBaseUrl}/`);\n\n  }\n\n\n  getRecipe(id: string): Observable<Recipe> {\n    // const recipe = RECIPES.find(ricetta => ricetta._id == id);\n    // return of (recipe);\n    return this.http.get<Recipe>(`${this.apiBaseUrl}/${id}`)\n\n  }\n\n\n  postRecipe(res: any): Observable<any>{\n    return this.http.post<any>(`${this.apiBaseUrl}/`, res);\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}