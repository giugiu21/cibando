{"ast":null,"code":"import { combineLatest, of } from 'rxjs';\nimport { tap, delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class EsempioCombineComponent {\n  constructor() {\n    this.nomi1 = [{\n      name: 'Danilo'\n    }, {\n      name: 'Carlo'\n    }, {\n      name: 'Mario'\n    }];\n    this.nomi2 = [{\n      name: 'Alessia'\n    }, {\n      name: 'Carla'\n    }];\n    this.primoGruppo$ = of(this.nomi1).pipe(delay(0), tap(valori => console.log('emesso il primo gruppo: ', valori)));\n    this.secondoGruppo$ = of(this.nomi2).pipe(delay(4000), tap(valori => console.log('emesso il secondo gruppo: ', valori)));\n    this.terzoGruppo$ = of(['Pino', 'Marco']).pipe(delay(1500), tap(valori => console.log('emesso il terzo gruppo: ', valori)));\n    this.gruppiCombinati$ = combineLatest(this.primoGruppo$, this.secondoGruppo$, this.terzoGruppo$);\n  }\n}\nEsempioCombineComponent.ɵfac = function EsempioCombineComponent_Factory(t) {\n  return new (t || EsempioCombineComponent)();\n};\nEsempioCombineComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EsempioCombineComponent,\n  selectors: [[\"app-esempio-combine\"]],\n  decls: 2,\n  vars: 0,\n  template: function EsempioCombineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"esempio-combine works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAqBA,aAAa,EAAEC,EAAE,QAAQ,MAAM;AACpD,SAAcC,GAAG,EAAEC,KAAK,QAAQ,gBAAgB;;AAOhD,OAAM,MAAOC,uBAAuB;EAYlCC;IAVA,UAAK,GAAG,CAAC;MAACC,IAAI,EAAE;IAAQ,CAAC,EAAE;MAACA,IAAI,EAAE;IAAO,CAAC,EAAE;MAACA,IAAI,EAAE;IAAO,CAAC,CAAC;IAE5D,UAAK,GAAG,CAAC;MAACA,IAAI,EAAE;IAAS,CAAC,EAAE;MAACA,IAAI,EAAE;IAAO,CAAC,CAAC;IAS1C,IAAI,CAACC,YAAY,GAAGN,EAAE,CAAC,IAAI,CAACO,KAAK,CAAC,CAACC,IAAI,CACrCN,KAAK,CAAC,CAAC,CAAC,EACRD,GAAG,CAAEQ,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,MAAM,CAAC,CAAC,CACjE;IAED,IAAI,CAACG,cAAc,GAAGZ,EAAE,CAAC,IAAI,CAACa,KAAK,CAAC,CAACL,IAAI,CACvCN,KAAK,CAAC,IAAI,CAAC,EACXD,GAAG,CAAEQ,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC,CAAC,CACnE;IAED,IAAI,CAACK,YAAY,GAAGd,EAAE,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAACQ,IAAI,CAC5CN,KAAK,CAAC,IAAI,CAAC,EACXD,GAAG,CAAEQ,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,MAAM,CAAC,CAAC,CACjE;IAED,IAAI,CAACM,gBAAgB,GAAGhB,aAAa,CAAC,IAAI,CAACO,YAAY,EAAE,IAAI,CAACM,cAAc,EAAE,IAAI,CAACE,YAAY,CAAC;EAGlG;;AA/BWX,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAa;EAAAC;EAAAC;EAAAC;IAAA;MCTpCC,yBAAG;MAAAA,sCAAsB;MAAAA,iBAAI","names":["combineLatest","of","tap","delay","EsempioCombineComponent","constructor","name","primoGruppo$","nomi1","pipe","valori","console","log","secondoGruppo$","nomi2","terzoGruppo$","gruppiCombinati$","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/cibando/client/src/app/components/esempio-combine/esempio-combine.component.ts","/Users/giulia/Documents/Progetti/cibando/client/src/app/components/esempio-combine/esempio-combine.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { map, tap, delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-esempio-combine',\n  templateUrl: './esempio-combine.component.html',\n  styleUrls: ['./esempio-combine.component.scss']\n})\nexport class EsempioCombineComponent {\n\n  nomi1 = [{name: 'Danilo'}, {name: 'Carlo'}, {name: 'Mario'}];\n\n  nomi2 = [{name: 'Alessia'}, {name: 'Carla'}];\n\n  private primoGruppo$: Observable<any[]>;\n  private secondoGruppo$: Observable<any[]>;\n  private terzoGruppo$: Observable<string[]>;\n\n  gruppiCombinati$: Observable<any[]>;\n\n  constructor(){\n    this.primoGruppo$ = of(this.nomi1).pipe(\n      delay(0),\n      tap((valori) => console.log('emesso il primo gruppo: ', valori))\n    );\n\n    this.secondoGruppo$ = of(this.nomi2).pipe(\n      delay(4000),\n      tap((valori) => console.log('emesso il secondo gruppo: ', valori))\n    );\n\n    this.terzoGruppo$ = of(['Pino', 'Marco']).pipe(\n      delay(1500),\n      tap((valori) => console.log('emesso il terzo gruppo: ', valori))\n    );\n\n    this.gruppiCombinati$ = combineLatest(this.primoGruppo$, this.secondoGruppo$, this.terzoGruppo$);\n\n\n  }\n\n\n}\n","<p>esempio-combine works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}