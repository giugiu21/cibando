{"ast":null,"code":"import { combineLatest, of } from 'rxjs';\nimport { map, tap, delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction EsempioCombineComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cliente_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" nome: \", cliente_r1.name, \" \");\n  }\n}\nexport class EsempioCombineComponent {\n  constructor() {\n    this.nomi1 = [{\n      name: 'Danilo'\n    }, {\n      name: 'Carlo'\n    }, {\n      name: 'Mario'\n    }];\n    this.nomi2 = [{\n      name: 'Alessia'\n    }, {\n      name: 'Carla'\n    }];\n    this.primoGruppo$ = of(this.nomi1).pipe(delay(0), tap(valori => console.log('emesso il primo gruppo: ', valori)));\n    this.secondoGruppo$ = of(this.nomi2).pipe(delay(4000), tap(valori => console.log('emesso il secondo gruppo: ', valori)));\n    this.terzoGruppo$ = of(['Pino', 'Marco']).pipe(delay(1500), tap(valori => console.log('emesso il terzo gruppo: ', valori)));\n    this.gruppiCombinati$ = combineLatest(this.primoGruppo$, this.secondoGruppo$, this.terzoGruppo$).pipe(map(([primaChiamata, secondaChiamata, terzaChiamata]) => {\n      console.log('prima chiamata: ' + JSON.stringify(primaChiamata));\n      console.log('seconda chiamata: ' + JSON.stringify(secondaChiamata));\n      console.log('terza chiamata: ' + JSON.stringify(terzaChiamata));\n      return [].concat(primaChiamata).concat(secondaChiamata).concat(terzaChiamata);\n    }), tap(val => console.log('valori uniti: ', val)));\n  }\n}\nEsempioCombineComponent.ɵfac = function EsempioCombineComponent_Factory(t) {\n  return new (t || EsempioCombineComponent)();\n};\nEsempioCombineComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EsempioCombineComponent,\n  selectors: [[\"app-esempio-combine\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function EsempioCombineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Ecco i nostri migliori clienti:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"ul\");\n      i0.ɵɵtemplate(4, EsempioCombineComponent_li_4_Template, 2, 1, \"li\", 0);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, ctx.gruppiCombinati$));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAqBA,aAAa,EAAEC,EAAE,QAAQ,MAAM;AACpD,SAASC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,gBAAgB;;;;;ICCxCC,0BAAqD;IACjDA,YACJ;IAAAA,iBAAK;;;;IADDA,eACJ;IADIA,sDACJ;;;ADIR,OAAM,MAAOC,uBAAuB;EAYlCC;IAVA,UAAK,GAAG,CAAC;MAACC,IAAI,EAAE;IAAQ,CAAC,EAAE;MAACA,IAAI,EAAE;IAAO,CAAC,EAAE;MAACA,IAAI,EAAE;IAAO,CAAC,CAAC;IAE5D,UAAK,GAAG,CAAC;MAACA,IAAI,EAAE;IAAS,CAAC,EAAE;MAACA,IAAI,EAAE;IAAO,CAAC,CAAC;IAS1C,IAAI,CAACC,YAAY,GAAGR,EAAE,CAAC,IAAI,CAACS,KAAK,CAAC,CAACC,IAAI,CACrCP,KAAK,CAAC,CAAC,CAAC,EACRD,GAAG,CAAES,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,MAAM,CAAC,CAAC,CACjE;IAED,IAAI,CAACG,cAAc,GAAGd,EAAE,CAAC,IAAI,CAACe,KAAK,CAAC,CAACL,IAAI,CACvCP,KAAK,CAAC,IAAI,CAAC,EACXD,GAAG,CAAES,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAAC,CAAC,CACnE;IAED,IAAI,CAACK,YAAY,GAAGhB,EAAE,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAACU,IAAI,CAC5CP,KAAK,CAAC,IAAI,CAAC,EACXD,GAAG,CAAES,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,MAAM,CAAC,CAAC,CACjE;IAED,IAAI,CAACM,gBAAgB,GAAGlB,aAAa,CAAC,IAAI,CAACS,YAAY,EAAE,IAAI,CAACM,cAAc,EAAE,IAAI,CAACE,YAAY,CAAC,CAACN,IAAI,CACnGT,GAAG,CAAC,CAAC,CAACiB,aAAa,EAAEC,eAAe,EAAEC,aAAa,CAAC,KAAG;MACrDR,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGQ,IAAI,CAACC,SAAS,CAACJ,aAAa,CAAC,CAAC;MAC/DN,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGQ,IAAI,CAACC,SAAS,CAACH,eAAe,CAAC,CAAC;MACnEP,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGQ,IAAI,CAACC,SAAS,CAACF,aAAa,CAAC,CAAC;MAE/D,OAAO,EAAE,CAACG,MAAM,CAACL,aAAa,CAAC,CAACK,MAAM,CAACJ,eAAe,CAAC,CAACI,MAAM,CAACH,aAAa,CAAC;IAC/E,CAAC,CAAC,EACFlB,GAAG,CAAEsB,GAAG,IAAKZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEW,GAAG,CAAC,CAAC,CACjD;EAGH;;AAxCWnB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTpCzB,yBAAG;MAAAA,+CAA+B;MAAAA,iBAAI;MACtCA,2BAAK;MAEGA,sEAEK;;MACTA,iBAAK;;;MAHuBA,eAA2B;MAA3BA,oEAA2B","names":["combineLatest","of","map","tap","delay","i0","EsempioCombineComponent","constructor","name","primoGruppo$","nomi1","pipe","valori","console","log","secondoGruppo$","nomi2","terzoGruppo$","gruppiCombinati$","primaChiamata","secondaChiamata","terzaChiamata","JSON","stringify","concat","val","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/cibando/client/src/app/components/esempio-combine/esempio-combine.component.ts","/Users/giulia/Documents/Progetti/cibando/client/src/app/components/esempio-combine/esempio-combine.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { map, tap, delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-esempio-combine',\n  templateUrl: './esempio-combine.component.html',\n  styleUrls: ['./esempio-combine.component.scss']\n})\nexport class EsempioCombineComponent {\n\n  nomi1 = [{name: 'Danilo'}, {name: 'Carlo'}, {name: 'Mario'}];\n\n  nomi2 = [{name: 'Alessia'}, {name: 'Carla'}];\n\n  private primoGruppo$: Observable<any[]>;\n  private secondoGruppo$: Observable<any[]>;\n  private terzoGruppo$: Observable<string[]>;\n\n  gruppiCombinati$: Observable<any[]>;\n\n  constructor(){\n    this.primoGruppo$ = of(this.nomi1).pipe(\n      delay(0),\n      tap((valori) => console.log('emesso il primo gruppo: ', valori))\n    );\n\n    this.secondoGruppo$ = of(this.nomi2).pipe(\n      delay(4000),\n      tap((valori) => console.log('emesso il secondo gruppo: ', valori))\n    );\n\n    this.terzoGruppo$ = of(['Pino', 'Marco']).pipe(\n      delay(1500),\n      tap((valori) => console.log('emesso il terzo gruppo: ', valori))\n    );\n\n    this.gruppiCombinati$ = combineLatest(this.primoGruppo$, this.secondoGruppo$, this.terzoGruppo$).pipe(\n      map(([primaChiamata, secondaChiamata, terzaChiamata])=>{\n        console.log('prima chiamata: ' + JSON.stringify(primaChiamata));\n        console.log('seconda chiamata: ' + JSON.stringify(secondaChiamata));\n        console.log('terza chiamata: ' + JSON.stringify(terzaChiamata));\n\n        return [].concat(primaChiamata).concat(secondaChiamata).concat(terzaChiamata);\n      }),\n      tap((val) => console.log('valori uniti: ', val))\n    )\n\n\n  }\n\n\n}\n","<p>Ecco i nostri migliori clienti:</p>\n<div>\n    <ul>\n        <li *ngFor=\"let cliente of gruppiCombinati$ | async\">\n            nome: {{cliente.name}}\n        </li>\n    </ul>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}